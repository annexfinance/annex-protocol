-- NewComptroller, but with markets listed so that we can make them annex markets in constructor
Macro FlywheelComptroller price=1.0 borrowRate=0.000005 annexInitAmount=5000000e18
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    --g1
    ComptrollerImpl Deploy ScenarioG1 ComptrollerScenG1
    Unitroller SetPendingImpl ComptrollerScenG1
    ComptrollerImpl ComptrollerScenG1 BecomeG1
    --list some tokens
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetMaxAssets 20
    Comptroller SetCloseFactor 0.5
    Comptroller LiquidationIncentive 1.1
    Comptroller SetAnnexRate 1e18
    NewAToken ZRX aZRX
    NewAToken BAT aBAT
    Support aZRX collateralFactor:0.5
    Support aBAT collateralFactor:0.5
    Comptroller AddAnnexMarkets (aZRX aBAT)
    Bep20 Deploy Standard ANN "ANN Token" 18
    Give (Address Comptroller) annexInitAmount ANN
    Comptroller Send "setANNAddress(address)" (Address ANN)
    Bep20 Deploy Standard XAI "XAI Token" 18
    Give (Address Comptroller) annexInitAmount XAI
    Comptroller Send "setXAIAddress(address)" (Address XAI)

Macro InitSpeeds
    Prep Geoff 100e18 ZRX aZRX
    Mint Geoff 50e18 aZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn Some BAT aBAT
    Mint Coburn 6e18 aBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn aBAT
    Borrow Coburn 1e18 aZRX
    Comptroller RefreshAnnexSpeeds

Test "Accrue ANN during a mint"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Mint Geoff 1e18 aZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Comptroller AnnexSupplyState aZRX "index") 1.2000000000001e49
    Assert Equal (Comptroller AnnexSupplyState aZRX "block") 300000
    Assert Equal (Bep20 ANN TokenBalance Geoff) 300000e18
    Assert Equal (Comptroller AnnexSupplierIndex aZRX Geoff) 1.2000000000001e49

Test "Accrue ANN during a borrow"
    FlywheelComptroller
    InitSpeeds
    Comptroller FastForward 300000 Blocks
    Assert Equal (Comptroller AnnexAccrued Coburn) 0
    Borrow Coburn 0.1e18 aZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 =  3.00001e41
    Assert Equal (Comptroller AnnexAccrued Coburn) 0
    Assert Equal (Comptroller AnnexBorrowState aZRX "index") 3.00001e41
    Assert Equal (Comptroller AnnexBorrowState aZRX "block") 300000
    Assert Equal (Bep20 ANN TokenBalance Coburn) 300000e18
    Assert Equal (Comptroller AnnexBorrowerIndex aZRX Coburn) 3.00001e41

Skip "Accrue ANN during a redeem"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Redeem Geoff 1e9 aZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Comptroller AnnexSupplyState aZRX "index") 1.2000000000001e49
    Assert Equal (Comptroller AnnexSupplyState aZRX "block") 300000
    Assert Equal (Bep20 ANN TokenBalance Geoff) 300000e18
    Assert Equal (Comptroller AnnexSupplierIndex aZRX Geoff) 1.2000000000001e49

Test "Accrue ANN during a repayBorrow"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Prep Coburn 0.5e18 ZRX aZRX
    RepayBorrow Coburn 0.5e18 aZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 =  3.00001e41
    Assert Equal (Comptroller AnnexAccrued Coburn) 0
    Assert Equal (Comptroller AnnexBorrowState aZRX "index") 3.00001e41
    Assert Equal (Comptroller AnnexBorrowState aZRX "block") 300000
    Assert Equal (Bep20 ANN TokenBalance Coburn) 300000e18
    Assert Equal (Comptroller AnnexBorrowerIndex aZRX Coburn) 3.00001e41

Test "Accrue ANN during a repayBorrowBehalf of 0"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    -- confirm we can init all flywheel accounts for free
    RepayBorrowBehalf Jared Coburn 0 aZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 = 3.00001e41
    Assert Equal (Comptroller AnnexAccrued Coburn) 0
    Assert Equal (Comptroller AnnexBorrowState aZRX "index") 3.00001e41
    Assert Equal (Comptroller AnnexBorrowState aZRX "block") 300000
    Assert Equal (Bep20 ANN TokenBalance Coburn) 300000e18
    Assert Equal (Comptroller AnnexBorrowerIndex aZRX Coburn) 3.00001e41

Test "Accrue ANN during a liquidation"
    FlywheelComptroller
    InitSpeeds
    Assert Equal (Comptroller AnnexSpeed aZRX) 1e18
    Assert Equal (Comptroller AnnexSpeed aBAT) 0
    --coburn zrx borrow, bat supply. geoff zrx supply
    FastForward 600000 Blocks--1e18 borrow * (1 + 600000 * 0.000005) = 3.5e18 borrow > 6e18 collateral * 0.5 CF
    Prep Geoff Some ZRX aZRX
    From Geoff (AToken aZRX Liquidate Coburn aBAT 0.5e18)
    -- zrx borrow index is updated and ann distributed
    -- * new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- * new index = 1e36 + 600000 * 1e18 * 1e36 / 1e18 = 6.00001E41
    Assert Equal (Comptroller AnnexBorrowState aZRX "index") 6.00001e41
    Assert Equal (Comptroller AnnexBorrowState aZRX "block") 600000
    -- zrx supply index isnt updated and ann isnt distributed for zrx supply
    Assert Equal (Comptroller AnnexSupplyState aZRX "index") 1e36
    Assert Equal (Comptroller AnnexSupplyState aZRX "block") 0
    Assert Equal (Comptroller AnnexSupplierIndex aZRX Geoff) 1e36--no change, minted in init
    -- bat supply/borrow index is not updated, since there is no ann speed
    Assert Equal (Comptroller AnnexSupplyState aBAT "index") 1e36
    Assert Equal (Comptroller AnnexSupplyState aBAT "block") 600000
    -- neither is borrow state. block is 0 because update fn is never even called
    Assert Equal (Comptroller AnnexBorrowState aBAT "index") 1e36
    Assert Equal (Comptroller AnnexBorrowState aBAT "block") 0
    --
    Assert Equal (Comptroller AnnexSupplierIndex aBAT Coburn) 1e36
    Assert Equal (Comptroller AnnexBorrowerIndex aZRX Coburn) 6.00001e41
    Assert Equal (Bep20 ANN TokenBalance Coburn) 600000e18
    Assert Equal (Comptroller AnnexAccrued Coburn) 0
    --
    Assert Equal (Comptroller AnnexSupplierIndex aBAT Geoff) 1e36
    Assert Equal (Bep20 ANN TokenBalance Geoff) 0
    Assert Equal (Comptroller AnnexAccrued Geoff) 0

Test "Accrue ANN during a transfer"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Bep20 ANN TokenBalance Geoff) 0
    Assert Equal (Comptroller AnnexSupplierIndex aZRX Geoff) 1e36
    Transfer Geoff Jared 2.5e10 aZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Bep20 ANN TokenBalance Geoff) 300000e18
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Comptroller AnnexSupplyState aZRX "index") 1.2000000000001e49
    Assert Equal (Comptroller AnnexSupplyState aZRX "block") 300000
    Assert Equal (Comptroller AnnexSupplierIndex aZRX Geoff) 1.2000000000001e49
    --
    Assert Equal (Comptroller AnnexAccrued Jared) 0
    Assert Equal (Comptroller AnnexSupplyState aZRX "index") 1.2000000000001e49
    Assert Equal (Comptroller AnnexSupplyState aZRX "block") 300000
    Assert Equal (Comptroller AnnexSupplierIndex aZRX Jared) 1.2000000000001e49

Test "Accrues correctly when market is added, deactivated, and activated again"
    FlywheelComptroller
    InitSpeeds
    NewAToken DAI aDAI
    --
    Support aDAI collateralFactor:0.5
    Comptroller AddAnnexMarkets aDAI
    Assert Equal (Comptroller GetAnnexMarkets) [(Address aZRX) (Address aBAT) (Address aDAI)]
    Prep Jared Some DAI aDAI
    Mint Jared 6e18 aDAI
    EnterMarkets Geoff aZRX
    Borrow Geoff 0.5e18 aDAI
    Borrow Coburn 0.5e18 aDAI
    Comptroller RefreshAnnexSpeeds
    Assert Equal (Comptroller AnnexSpeed aZRX) 0.5e18
    Assert Equal (Comptroller AnnexSpeed aDAI) 0.5e18
    --
    FastForward 100 Blocks
    Comptroller DropAnnexMarket aDAI
    Comptroller ClaimAnnex Geoff
    Assert Equal (Bep20 ANN TokenBalance Geoff) 75e18--half of adai, all of zrx(.25e18 + .5e18) * 100
    Assert Equal (Comptroller GetAnnexMarkets) [(Address aZRX) (Address aBAT)]
    Assert Equal (Comptroller AnnexSpeed aZRX) 1e18
    Assert Equal (Comptroller AnnexSpeed aDAI) 0
    --
    FastForward 100 Blocks
    Comptroller ClaimAnnex Geoff
    Assert Equal (Bep20 ANN TokenBalance Geoff) 175e18-- += 1e18 * 100
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    --
    Comptroller AddAnnexMarkets aDAI
    FastForward 100 Blocks
    Comptroller ClaimAnnex Geoff
    Assert Equal (Bep20 ANN TokenBalance Geoff) 250e18--half of adai, all of zrx. += (.25 + .5) * 100
    Assert Equal (Comptroller AnnexAccrued Geoff) 0

Test "TransferComp handles running out of ANN in Comptroller correctly"
    FlywheelComptroller price:1.0 borrowRate:0.000005 annexInitAmount:1e18
    InitSpeeds
    FastForward 2 Blocks
    Comptroller ClaimAnnex Geoff
    Assert Equal (Comptroller AnnexAccrued Geoff) 2e18
    Assert Equal (Bep20 ANN TokenBalance Geoff) 0
    Give (Address Comptroller) 1e18 ANN
    Comptroller ClaimAnnex Geoff
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Bep20 ANN TokenBalance Geoff) 2e18

Test "Changing ANN rate continues to distribute at the correct speed"
    FlywheelComptroller
    InitSpeeds
    --
    Assert Equal (Comptroller AnnexSpeed aZRX) 1e18
    FastForward 10 Blocks
    Comptroller SetAnnexRate 2e18
    Assert Equal (Comptroller AnnexSpeed aZRX) 2e18
    FastForward 10 Blocks
    Comptroller ClaimAnnex Geoff
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Bep20 ANN TokenBalance Geoff) 30e18
