-- Tests for the grants and math patch

-- NewComptroller, but with markets listed so that we can make them annex markets in constructor
Macro FlywheelComptroller price=1.0 borrowRate=0.000005 annexInitAmount=5000000e18
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    --g1
    ComptrollerImpl Deploy ScenarioG1 ComptrollerScenG1
    Unitroller SetPendingImpl ComptrollerScenG1
    ComptrollerImpl ComptrollerScenG1 BecomeG1
    --list some tokens
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetMaxAssets 20
    Comptroller SetCloseFactor 0.5
    Comptroller LiquidationIncentive 1.1
    Comptroller SetAnnexRate 1e18
    NewAToken ZRX aZRX
    NewAToken BAT aBAT
    Support aZRX collateralFactor:0.5
    Support aBAT collateralFactor:0.5
    Comptroller AddAnnexMarkets (aZRX aBAT)
    Bep20 Deploy Standard ANN "ANN Token" 18
    Give (Address Comptroller) annexInitAmount ANN
    Comptroller Send "setANNAddress(address)" (Address ANN)
    Bep20 Deploy Standard XAI "XAI Token" 18
    Give (Address Comptroller) annexInitAmount XAI
    Comptroller Send "setXAIAddress(address)" (Address XAI)

Macro GrantsComptroller
    FlywheelComptroller
    -- g3
    ComptrollerImpl Deploy ScenarioG3 ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen BecomeG3
    -- g4
    ComptrollerImpl Deploy ScenarioG4 ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen BecomeG4
    -- current
    ComptrollerImpl Deploy Scenario ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen Become

Macro InitSpeeds
    Prep Geoff 100e18 ZRX aZRX
    Mint Geoff 50e18 aZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn Some BAT vBAT
    Mint Coburn 6e18 aBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn aBAT
    Borrow Coburn 1e18 aZRX
    Comptroller SetAnnexSpeed aZRX 1 1
    Comptroller SetAnnexSpeed aBAT 1 1
    Comptroller RefreshAnnexSpeeds
    Comptroller Send "setANNAddress(address)" (Address ANN)

Test "ANN can be granted in combination with liquidity rewards"
    GrantsComptroller
    InitSpeeds
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Bep20 ANN TokenBalance Geoff) 0
    FastForward 1000 Blocks
    Comptroller ClaimAnnex Geoff
    Comptroller Send "_grantANN(address,uint256)" (Address Geoff) 1000
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Bep20 ANN TokenBalance Geoff) 1000000000000000001000

Test "ANN can be granted"
    -- Can be granted once
    GrantsComptroller
    InitSpeeds
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Bep20 ANN TokenBalance Geoff) 0
    Comptroller Send "_grantANN(address,uint256)" (Address Geoff) 1000
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Bep20 ANN TokenBalance Geoff) 1000
    -- Assert Log AnnexGranted (recipient (Address Geoff)) (amount "1000")
    -- Can be granted multiple times
    Comptroller Send "_grantANN(address,uint256)" (Address Geoff) 2000
    Assert Equal (Comptroller AnnexAccrued Geoff) 0
    Assert Equal (Bep20 ANN TokenBalance Geoff) 3000
