
Macro NewMintXAI mintXAIAmount mintAmount user=Geoff collateralPrice=1.0 closeFactor=0.9
    PricedComptrollerWithXAIController closeFactor:0.9
    XAIController SetTreasuryData Guardian Jared 1e14
    NewAToken ZRX aZRX
    PriceOracle SetPrice aZRX collateralPrice
    Support aZRX collateralFactor:0.7
    Comptroller SetXAIMintRate 7e3
    SimpleMintXAI user mintXAIAmount mintAmount

Macro SimpleMintXAI user mintXAIAmount mintAmount
    Prep user mintAmount ZRX aZRX
    Mint user mintAmount aZRX
    EnterMarkets user aZRX
    MintXAI user mintXAIAmount

Test "XAI Mint Fee"
    NewMintXAI mintXAIAmount:1e18 mintAmount:1.43e18
    --
    -- Verify that the borrow results in the correct state
    Assert Equal (Comptroller MintedXAI Geoff) 1e18
    Assert Equal (AToken aZRX UnderlyingBalance Geoff) 1.43e18
    Assert Equal (XAI TokenBalance Geoff) 0.9999e18
    Assert Equal (XAI TokenBalance Jared) 1e14

Test "XAI Mint Treasury Guardian"
    NewMintXAI mintXAIAmount:1e18 mintAmount:1.43e18
    --
    -- Verify that the borrow results in the correct state
    XAIController SetTreasuryData Guardian Jared 1e14
    From Guardian (XAIController SetTreasuryData Guardian Jared 1e14)
    AllowFailures
    From Jared (XAIController SetTreasuryData Guardian Jared 1e14)
    Assert Failure UNAUTHORIZED SET_TREASURY_OWNER_CHECK "0"
    From Jared (XAIController SetTreasuryData Jared Jared 1e14)
    Assert Failure UNAUTHORIZED SET_TREASURY_OWNER_CHECK "0"

Test "XAI Mint Treasury Percent Cap"
    NewMintXAI mintXAIAmount:1e18 mintAmount:1.43e18
    AllowFailures
    XAIController SetTreasuryData Guardian Jared 2e18
    Assert Revert "revert treasury percent cap overflow"
