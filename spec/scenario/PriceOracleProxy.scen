Macro SetupPriceOracleProxy
    Unitroller Deploy
    PriceOracle Deploy Simple
    ComptrollerImpl Deploy Scenario ScenComptroller
    Unitroller SetPendingImpl ScenComptroller
    ComptrollerImpl ScenComptroller Become
    NewBNBToken aBNB
    NewAToken USDC aUSDC
    NewAToken SAI aSAI
    NewAToken DAI aDAI
    NewAToken USDT aUSDT
    Comptroller SupportMarket aBNB
    Comptroller SupportMarket aUSDC
    Comptroller SupportMarket aSAI
    Comptroller SupportMarket aDAI
    Comptroller SupportMarket aUSDT
    Comptroller SetCloseFactor 0.1
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address aBNB) (Address aUSDC) (Address aSAI) (Address aDAI) (Address aUSDT)
    Comptroller SetPriceOracle (PriceOracleProxy Address)

Test "uses address(2) for dai and address(1) for usdc"
    SetupPriceOracleProxy
    PriceOracle SetDirectPrice (Address 0x0000000000000000000000000000000000000001) 5740564708.572881
    PriceOracle SetDirectPrice (Address 0x0000000000000000000000000000000000000002) 0.005842307360923634
    Assert Equal (PriceOracleProxy Price aUSDC) 5740564708572881000000000000
    Assert Equal (PriceOracleProxy Price aDAI) 5842307360923634

Test "sai price is dai price until set"
    SetupPriceOracleProxy
    PriceOracle SetDirectPrice (Address 0x0000000000000000000000000000000000000002) 0.005842307360923634
    Assert Equal (PriceOracleProxy Price aSAI) 5842307360923634
    PriceOracleProxy SetSaiPrice 0.006842307360923634
    Assert Equal (PriceOracleProxy Price aSAI) 6842307360923634

Test "gets tether and usdc prices"
    SetupPriceOracleProxy
    PriceOracle SetDirectPrice (Address 0x0000000000000000000000000000000000000001) 5740564708.572881
    -- scaled to 1e30 bc both tokens have 6 decimals
    Assert Equal (PriceOracleProxy Price aUSDT) 5740564708572881000000000000
    Assert Equal (PriceOracleProxy Price aUSDC) 5740564708572881000000000000
